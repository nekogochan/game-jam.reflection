local GameManager = {
	current_level = "menu"
}

local function switch_to_scene(new_scene)
	if new_scene == "level" then
		GameManager.current_level = new_scene
		msg.post("/loader#menu", "unload")
		msg.post("/loader#level", "load")
	elseif new_scene == "menu" then
		GameManager.current_level = new_scene
		msg.post("/loader#level", "unload")
		msg.post("/loader#menu", "load")
	end
end

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	msg.post("/loader#menu", "load")
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")
	end
 
	if message_id == hash("change_scene") and message.scene then
		switch_to_scene(message.scene)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action.pressed then
		if GameManager.current_level == "level" then
			switch_to_scene("menu")
		end
		if GameManager.current_level == "menu" then
			switch_to_scene("level")
		end
	end
end