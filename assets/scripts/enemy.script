local S_LOOK = 0
local S_SHOOT = 1
local S_MANEUER = 2
local S_DO_NOTHING = 3
local S_RUN_TO_PLAYER = 4
local TIME_TO_SWITCH_BEHAVIOR_S = 0.87

-- todo-matvey: сделать так, чтобы чувак бежал до игрока пока расстояние не будет такое
local DISTANCE_TO_BE_ANGRY_AS_FUCK = 500

local function switch_behavior(self)
    if self.behavior == S_RUN_TO_PLAYER or self.behavior == S_MANEUER then
        self.behavior = S_LOOK
    elseif self.behavior == S_LOOK then
        self.behavior = S_SHOOT
    elseif self.behavior == S_SHOOT then
        self.behavior = S_MANEUER
        self.random_place = go.get_position() + vmath.vector3(math.random(-70, 70), math.random(-70, 70), 0)
    end

    self.time_to_switch_behavior = 0.87
end

local function look_at(target_pos) -- should not be inside a cycle
    local pos = go.get_position()
    local dir = target_pos - pos
    dir.z = pos.z

    local look_dirv = vmath.normalize(dir)
    local angle = math.atan2(look_dirv.y, look_dirv.x) +
    math.pi / 2.0                                                   -- смещаем круг углов на пи/2 потому что спрайт смотрит в 3пи/2
    angle = math.deg(angle)

    go.set_rotation(vmath.euler_to_quat(0, 0, angle), "sprite")
end

local function run_to_place(self, target_pos)
    local pos = go.get_position()
    local dir = target_pos - pos
    dir.z = pos.z

    local look_dirv = vmath.normalize(dir)
    pos.x = pos.x + look_dirv.x * self.linspeed
    pos.y = pos.y + look_dirv.y * self.linspeed

    go.set_position(pos)
    return vmath.length(target_pos - pos)
end

local function shoot(self)
    local player_pos = go.get_position(msg.url("/hero/heroobj"))
    local pos = go.get_position()

    local dir = vmath.normalize(player_pos - pos)
    dir.z = 0

    local projectile_urls = collectionfactory.create("#shooter", pos)
    msg.post(projectile_urls["/fireball-obj"], "set_direction", { direction = dir })
end

function init(self)
    self.behavior = S_DO_NOTHING

    self.time_to_switch_behavior = .0 -- in seconds
    self.linspeed = 0.87
    self.random_place = go.get_position()
end

function final(self)
    -- Add finalization code here
    -- Learn more: https://defold.com/manuals/script/
    -- Remove this function if not needed
end

function update(self, dt)
    if (self.behavior == S_DO_NOTHING) then
        local player_pos = go.get_position(msg.url("/hero/heroobj"))
        local my_pos = go.get_position()
        local distance = vmath.length(my_pos - player_pos)
        if (distance < DISTANCE_TO_BE_ANGRY_AS_FUCK) then
            self.behavior = S_RUN_TO_PLAYER
        end
    end

    if self.behavior == S_RUN_TO_PLAYER then
        local player_pos = go.get_position(msg.url("/hero/heroobj"))
        look_at(player_pos)
        local distance = run_to_place(self, player_pos)

        if distance <= 1.0 then
            switch_behavior(self)
        end
    elseif self.behavior == S_MANEUER then
        local distance = run_to_place(self, self.random_place)
        look_at(self.random_place)

        if distance <= 1.0 then
            switch_behavior(self)
        end
    elseif self.behavior == S_LOOK then
        local player_pos = go.get_position(msg.url("/hero/heroobj"))
        look_at(player_pos)
    elseif self.behavior == S_SHOOT then
        shoot(self)
        switch_behavior(self)
    end

    self.time_to_switch_behavior = self.time_to_switch_behavior - dt
    if self.time_to_switch_behavior <= 0.0 then
        switch_behavior(self)
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("trigger_response") then
        msg.post(message.other_id, "is_reflected", { other_id = msg.url() })
    elseif message_id == hash("is_reflected") and message.is_reflected then
        msg.post(message.other_id, "destroy")
        go.delete(".", true)
    end
end
