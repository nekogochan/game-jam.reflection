local DISPLAY_CENTER_X = sys.get_config_int("display.width") / 2
local DISPLAY_CENTER_Y = sys.get_config_int("display.height") / 2

local function set_cam_to_self()
	go.set_position(go.get_position(), 'camera');
end

-------

function init(self)
	msg.post(".", "acquire_input_focus");
	self.isMoving = false;
	self.input = vmath.vector3(0, 1, 0);
	self.speed = 300;
	self.movingActiveKeys = 0;
	self.screen_size = vmath.vector3();
	set_cam_to_self();
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if (self.isMoving) then
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
	end

	self.input.x = 0
	self.input.y = 0
	self.isMoving = false
end

function on_input(self, action_id, action)
	local isMoveAction = false
	
	if action_id == hash("move-up") then
		self.input.y = 1
		isMoveAction = true
	elseif action_id == hash("move-down") then
		self.input.y = -1
		isMoveAction = true
	elseif action_id == hash("move-left") then
		self.input.x = -1
		isMoveAction = true
	elseif action_id == hash("move-right") then
		self.input.x = 1
		isMoveAction = true
	end

	if action.x and action.y then
		local pos = go.get_position();
		local angle = math.atan2(DISPLAY_CENTER_X - action.x, action.y - DISPLAY_CENTER_Y)
		go.set_rotation(vmath.quat_rotation_z(angle), '#sprite')
	end

	if vmath.length(self.input) > 0 then
		self.isMoving = true
		self.dir = vmath.normalize(self.input)
	end

	if (action.pressed and isMoveAction) then
		self.movingActiveKeys = self.movingActiveKeys + 1;
	end
	if (action.released and isMoveAction) then
		self.movingActiveKeys = self.movingActiveKeys - 1;
	end

	if (self.movingActiveKeys > 0) then
		set_cam_to_self();
		if (self.movingActiveKeys == 1 and action.pressed) then
			sprite.play_flipbook("#sprite", hash("move"))
			sound.play("#move");
		end
	else
		sprite.play_flipbook("#sprite", hash("stay"));
		sound.stop("#move");
	end
end

function on_message(self, message_id, message)
	if (message_id == 'screen_size') then
		self.screen_size = message;
	end
end